{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAM8E,SAArEC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,IAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEtBG,EAAO,C,SAAEJ,E,MAAUC,MAClBA,MAuBsC,SAApCO,GAAQR,SAAEA,EAAQC,MAAEA,IAC3BJ,EAAAY,OAAOC,QAAQ,sBAAoBV,QAAiBC,OAIT,SAApCU,GAAUX,SAAEA,EAAQC,MAAEA,IAC7BJ,EAAAY,OAAOG,QAAQ,uBAAqBZ,QAAiBC,OAxCvCY,SAASC,cAAc,SA4C/BC,iBAAiB,UA5BgB,SAAvBC,GAChBA,EAAMC,iBACN,MAAMC,EAAOF,EAAMG,cACbC,EAAW,IAAIC,SAASH,GACxBI,EAAY,GAClB,IAAK,MAAOC,EAAKC,KAAUJ,EAASK,UAClCH,EAAUC,GAAOG,OAAOF,GAGdN,EAAPS,QAE+B,IAA/B,IAAI3B,EAAW,EAAGA,GAAYsB,EAAUM,OAAQ5B,GAAY,EAC/DD,EAAcC,EAAUsB,EAAUrB,OAAO4B,KAAKlB,GAAWmB,MAAMtB,GAC/Dc,EAAUrB,MAAQqB,EAAUrB,MAAQqB,EAAUS","sources":["src/js/test.js"],"sourcesContent":["\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// Получаем ссылку на форму (чтобы повесить слушателя)\nconst formRef = document.querySelector('.form');\n\n// Создаю промис внутри Фн (не забыть про return). Фн принимает: номер промиса (position) и задержку (delay) (шаблон из задания).\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay })\n      }\n      reject({ position, delay })\n    }, delay);\n  });\n};\n  \n// Функция-колбек вызываемая при событии submit (не забыть preventDefault)\nfunction onSubmit(event) {\n  event.preventDefault();\n  const form = event.currentTarget;\n  const dataForm = new FormData(form);\n  const finalData = {};\n  for (const [key, value] of dataForm.entries()) {\n    finalData[key] = Number(value);\n  }\n  // очищаем форму\n  form.reset();\n  // в цикле for вызываем функцию создающую промис\n  for (let position = 1; position <= finalData.amount; position += 1){\n    createPromise(position, finalData.delay).then(onSuccess).catch(onError);\n    finalData.delay = finalData.delay + finalData.step;\n  };\n};\n\n// Функция вызываемая методом catch, когда промис возвращает reject\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\n// Функция вызываемая методом then, когда промис возвращает resolve\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\n// submit слушателm на форму \nformRef.addEventListener('submit', onSubmit);"],"names":["$iQIUW","parcelRequire","$6fa7327f1ccc044f$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$6fa7327f1ccc044f$var$onError","Notify","failure","$6fa7327f1ccc044f$var$onSuccess","success","document","querySelector","addEventListener","event","preventDefault","form","currentTarget","dataForm","FormData","finalData","key","value","entries","Number","reset","amount","then","catch","step"],"version":3,"file":"test.88605d2e.js.map"}